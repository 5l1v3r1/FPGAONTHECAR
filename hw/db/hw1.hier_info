|top
CLK => uart:uart_i.CLK
RST => uart:uart_i.RST
UART_TXD << uart:uart_i.UART_TXD
UART_RXD => uart:uart_i.UART_RXD
Led1 << uart:uart_i.DOUT[1]


|top|UART:uart_i
CLK => uart_debouncer:use_debouncer_g:debouncer_i.CLK
CLK => uart_clk_cnt[0].CLK
CLK => uart_clk_cnt[1].CLK
CLK => uart_clk_cnt[2].CLK
CLK => uart_clk_cnt[3].CLK
CLK => uart_clk_cnt[4].CLK
CLK => uart_clk_cnt[5].CLK
CLK => uart_clk_cnt[6].CLK
CLK => uart_tx:uart_tx_i.CLK
CLK => uart_rx:uart_rx_i.CLK
RST => uart_clk_cnt.OUTPUTSELECT
RST => uart_clk_cnt.OUTPUTSELECT
RST => uart_clk_cnt.OUTPUTSELECT
RST => uart_clk_cnt.OUTPUTSELECT
RST => uart_clk_cnt.OUTPUTSELECT
RST => uart_clk_cnt.OUTPUTSELECT
RST => uart_clk_cnt.OUTPUTSELECT
RST => uart_tx:uart_tx_i.RST
RST => uart_rx:uart_rx_i.RST
UART_TXD <= uart_tx:uart_tx_i.UART_TXD
UART_RXD => uart_debouncer:use_debouncer_g:debouncer_i.DEB_IN
DIN[0] => uart_tx:uart_tx_i.DIN[0]
DIN[1] => uart_tx:uart_tx_i.DIN[1]
DIN[2] => uart_tx:uart_tx_i.DIN[2]
DIN[3] => uart_tx:uart_tx_i.DIN[3]
DIN[4] => uart_tx:uart_tx_i.DIN[4]
DIN[5] => uart_tx:uart_tx_i.DIN[5]
DIN[6] => uart_tx:uart_tx_i.DIN[6]
DIN[7] => uart_tx:uart_tx_i.DIN[7]
DIN_VLD => uart_tx:uart_tx_i.DIN_VLD
DIN_RDY <= uart_tx:uart_tx_i.DIN_RDY
DOUT[0] <= uart_rx:uart_rx_i.DOUT[0]
DOUT[1] <= uart_rx:uart_rx_i.DOUT[1]
DOUT[2] <= uart_rx:uart_rx_i.DOUT[2]
DOUT[3] <= uart_rx:uart_rx_i.DOUT[3]
DOUT[4] <= uart_rx:uart_rx_i.DOUT[4]
DOUT[5] <= uart_rx:uart_rx_i.DOUT[5]
DOUT[6] <= uart_rx:uart_rx_i.DOUT[6]
DOUT[7] <= uart_rx:uart_rx_i.DOUT[7]
DOUT_VLD <= uart_rx:uart_rx_i.DOUT_VLD
FRAME_ERROR <= uart_rx:uart_rx_i.FRAME_ERROR


|top|UART:uart_i|UART_DEBOUNCER:\use_debouncer_g:debouncer_i
CLK => DEB_OUT~reg0.CLK
CLK => input_shreg[0].CLK
CLK => input_shreg[1].CLK
CLK => input_shreg[2].CLK
DEB_IN => or_var.IN1
DEB_IN => and_var.IN1
DEB_IN => input_shreg[0].DATAIN
DEB_OUT <= DEB_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|UART:uart_i|UART_TX:uart_tx_i
CLK => UART_TXD~reg0.CLK
CLK => tx_bit_count[0].CLK
CLK => tx_bit_count[1].CLK
CLK => tx_bit_count[2].CLK
CLK => tx_data[0].CLK
CLK => tx_data[1].CLK
CLK => tx_data[2].CLK
CLK => tx_data[3].CLK
CLK => tx_data[4].CLK
CLK => tx_data[5].CLK
CLK => tx_data[6].CLK
CLK => tx_data[7].CLK
CLK => tx_clk_en.CLK
CLK => tx_ticks[0].CLK
CLK => tx_ticks[1].CLK
CLK => tx_ticks[2].CLK
CLK => tx_ticks[3].CLK
CLK => tx_pstate~1.DATAIN
RST => tx_clk_en.OUTPUTSELECT
RST => tx_bit_count.OUTPUTSELECT
RST => tx_bit_count.OUTPUTSELECT
RST => tx_bit_count.OUTPUTSELECT
RST => UART_TXD.OUTPUTSELECT
RST => tx_pstate.OUTPUTSELECT
RST => tx_pstate.OUTPUTSELECT
RST => tx_pstate.OUTPUTSELECT
RST => tx_pstate.OUTPUTSELECT
RST => tx_pstate.OUTPUTSELECT
RST => tx_pstate.OUTPUTSELECT
UART_CLK_EN => tx_ticks.OUTPUTSELECT
UART_CLK_EN => tx_ticks.OUTPUTSELECT
UART_CLK_EN => tx_ticks.OUTPUTSELECT
UART_CLK_EN => tx_ticks.OUTPUTSELECT
UART_CLK_EN => uart_tx_clk_en_p.IN1
UART_TXD <= UART_TXD~reg0.DB_MAX_OUTPUT_PORT_TYPE
DIN[0] => tx_data[0].DATAIN
DIN[1] => tx_data[1].DATAIN
DIN[2] => tx_data[2].DATAIN
DIN[3] => tx_data[3].DATAIN
DIN[4] => tx_data[4].DATAIN
DIN[5] => tx_data[5].DATAIN
DIN[6] => tx_data[6].DATAIN
DIN[7] => tx_data[7].DATAIN
DIN_VLD => uart_tx_input_data_reg_p.IN1
DIN_VLD => tx_nstate.OUTPUTSELECT
DIN_VLD => tx_nstate.OUTPUTSELECT
DIN_VLD => Selector1.IN3
DIN_VLD => Selector0.IN1
DIN_RDY <= tx_ready.DB_MAX_OUTPUT_PORT_TYPE


|top|UART:uart_i|UART_RX:uart_rx_i
CLK => FRAME_ERROR~reg0.CLK
CLK => DOUT_VLD~reg0.CLK
CLK => rx_data[0].CLK
CLK => rx_data[1].CLK
CLK => rx_data[2].CLK
CLK => rx_data[3].CLK
CLK => rx_data[4].CLK
CLK => rx_data[5].CLK
CLK => rx_data[6].CLK
CLK => rx_data[7].CLK
CLK => rx_bit_count[0].CLK
CLK => rx_bit_count[1].CLK
CLK => rx_bit_count[2].CLK
CLK => rx_clk_en.CLK
CLK => rx_ticks[0].CLK
CLK => rx_ticks[1].CLK
CLK => rx_ticks[2].CLK
CLK => rx_ticks[3].CLK
CLK => rx_pstate~1.DATAIN
RST => rx_clk_en.OUTPUTSELECT
RST => rx_bit_count.OUTPUTSELECT
RST => rx_bit_count.OUTPUTSELECT
RST => rx_bit_count.OUTPUTSELECT
RST => DOUT_VLD.OUTPUTSELECT
RST => FRAME_ERROR.OUTPUTSELECT
RST => rx_pstate.OUTPUTSELECT
RST => rx_pstate.OUTPUTSELECT
RST => rx_pstate.OUTPUTSELECT
RST => rx_pstate.OUTPUTSELECT
RST => rx_pstate.OUTPUTSELECT
UART_CLK_EN => rx_ticks.OUTPUTSELECT
UART_CLK_EN => rx_ticks.OUTPUTSELECT
UART_CLK_EN => rx_ticks.OUTPUTSELECT
UART_CLK_EN => rx_ticks.OUTPUTSELECT
UART_CLK_EN => uart_rx_clk_en_p.IN1
UART_RXD => Selector0.IN2
UART_RXD => DOUT_VLD.DATAB
UART_RXD => FRAME_ERROR.DATAB
UART_RXD => Selector1.IN1
UART_RXD => rx_data[7].DATAIN
DOUT[0] <= rx_data[0].DB_MAX_OUTPUT_PORT_TYPE
DOUT[1] <= rx_data[1].DB_MAX_OUTPUT_PORT_TYPE
DOUT[2] <= rx_data[2].DB_MAX_OUTPUT_PORT_TYPE
DOUT[3] <= rx_data[3].DB_MAX_OUTPUT_PORT_TYPE
DOUT[4] <= rx_data[4].DB_MAX_OUTPUT_PORT_TYPE
DOUT[5] <= rx_data[5].DB_MAX_OUTPUT_PORT_TYPE
DOUT[6] <= rx_data[6].DB_MAX_OUTPUT_PORT_TYPE
DOUT[7] <= rx_data[7].DB_MAX_OUTPUT_PORT_TYPE
DOUT_VLD <= DOUT_VLD~reg0.DB_MAX_OUTPUT_PORT_TYPE
FRAME_ERROR <= FRAME_ERROR~reg0.DB_MAX_OUTPUT_PORT_TYPE


